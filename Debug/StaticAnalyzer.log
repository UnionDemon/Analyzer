main.obj : error LNK2019: ссылка на неразрешенный внешний символ "void __cdecl llvm::llvm_unreachable_internal(char const *,char const *,unsigned int)" (?llvm_unreachable_internal@llvm@@YAXPBD0I@Z) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseAttr(class clang::Attr *)" (?TraverseAttr@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVAttr@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "void * __cdecl llvm::allocate_buffer(unsigned int,unsigned int)" (?allocate_buffer@llvm@@YAPAXII@Z) в функции "public: void * __thiscall llvm::MallocAllocator::Allocate(unsigned int,unsigned int)" (?Allocate@MallocAllocator@llvm@@QAEPAXII@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "void __cdecl llvm::deallocate_buffer(void *,unsigned int,unsigned int)" (?deallocate_buffer@llvm@@YAXPAXII@Z) в функции "public: void __thiscall llvm::MallocAllocator::Deallocate(void const *,unsigned int,unsigned int)" (?Deallocate@MallocAllocator@llvm@@QAEXPBXII@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "protected: void __thiscall llvm::SmallVectorBase<unsigned int>::grow_pod(void *,unsigned int,unsigned int)" (?grow_pod@?$SmallVectorBase@I@llvm@@IAEXPAXII@Z) в функции "protected: void __thiscall llvm::SmallVectorTemplateCommon<void *,void>::grow_pod(unsigned int,unsigned int)" (?grow_pod@?$SmallVectorTemplateCommon@PAXX@llvm@@IAEXII@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: enum clang::NestedNameSpecifier::SpecifierKind __thiscall clang::NestedNameSpecifier::getKind(void)const " (?getKind@NestedNameSpecifier@clang@@QBE?AW4SpecifierKind@12@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseNestedNameSpecifier(class clang::NestedNameSpecifier *)" (?TraverseNestedNameSpecifier@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVNestedNameSpecifier@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::TypeLoc __thiscall clang::NestedNameSpecifierLoc::getTypeLoc(void)const " (?getTypeLoc@NestedNameSpecifierLoc@clang@@QBE?AVTypeLoc@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseNestedNameSpecifierLoc(class clang::NestedNameSpecifierLoc)" (?TraverseNestedNameSpecifierLoc@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NVNestedNameSpecifierLoc@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "private: __thiscall clang::TemplateName::TemplateName(void *)" (??0TemplateName@clang@@AAE@PAX@Z) в функции "public: static class clang::TemplateName __cdecl clang::TemplateName::getFromVoidPointer(void *)" (?getFromVoidPointer@TemplateName@clang@@SA?AV12@PAX@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: __thiscall clang::TemplateName::TemplateName(class clang::TemplateDecl *)" (??0TemplateName@clang@@QAE@PAVTemplateDecl@1@@Z) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseDeclarationNameInfo(struct clang::DeclarationNameInfo)" (?TraverseDeclarationNameInfo@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NUDeclarationNameInfo@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::QualifiedTemplateName * __thiscall clang::TemplateName::getAsQualifiedTemplateName(void)const " (?getAsQualifiedTemplateName@TemplateName@clang@@QBEPAVQualifiedTemplateName@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseTemplateName(class clang::TemplateName)" (?TraverseTemplateName@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NVTemplateName@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::DependentTemplateName * __thiscall clang::TemplateName::getAsDependentTemplateName(void)const " (?getAsDependentTemplateName@TemplateName@clang@@QBEPAVDependentTemplateName@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseTemplateName(class clang::TemplateName)" (?TraverseTemplateName@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NVTemplateName@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::Type const * __thiscall clang::Type::getUnqualifiedDesugaredType(void)const " (?getUnqualifiedDesugaredType@Type@clang@@QBEPBV12@XZ) в функции "public: class clang::ReferenceType const * __thiscall clang::Type::castAs<class clang::ReferenceType>(void)const " (??$castAs@VReferenceType@clang@@@Type@clang@@QBEPBVReferenceType@1@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::TemplateArgument __thiscall clang::SubstTemplateTypeParmPackType::getArgumentPack(void)const " (?getArgumentPack@SubstTemplateTypeParmPackType@clang@@QBE?AVTemplateArgument@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseSubstTemplateTypeParmPackType(class clang::SubstTemplateTypeParmPackType *)" (?TraverseSubstTemplateTypeParmPackType@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVSubstTemplateTypeParmPackType@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::Expr * __thiscall clang::DependentBitIntType::getNumBitsExpr(void)const " (?getNumBitsExpr@DependentBitIntType@clang@@QBEPAVExpr@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseDependentBitIntType(class clang::DependentBitIntType *)" (?TraverseDependentBitIntType@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVDependentBitIntType@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class llvm::raw_ostream & __thiscall llvm::raw_ostream::operator<<(long)" (??6raw_ostream@llvm@@QAEAAV01@J@Z) в функции "public: class llvm::raw_ostream & __thiscall llvm::raw_ostream::operator<<(int)" (??6raw_ostream@llvm@@QAEAAV01@H@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class llvm::raw_ostream & __thiscall llvm::raw_ostream::write(char const *,unsigned int)" (?write@raw_ostream@llvm@@QAEAAV12@PBDI@Z) в функции "public: class llvm::raw_ostream & __thiscall llvm::raw_ostream::operator<<(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (??6raw_ostream@llvm@@QAEAAV01@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "class llvm::raw_fd_ostream & __cdecl llvm::errs(void)" (?errs@llvm@@YAAAVraw_fd_ostream@1@XZ) в функции "public: virtual bool __thiscall ExampleVisitor::VisitFunctionDecl(class clang::FunctionDecl *)" (?VisitFunctionDecl@ExampleVisitor@@UAE_NPAVFunctionDecl@clang@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "private: void __thiscall clang::APValue::DestroyDataAndMakeUninit(void)" (?DestroyDataAndMakeUninit@APValue@clang@@AAEXXZ) в функции "public: __thiscall clang::APValue::~APValue(void)" (??1APValue@clang@@QAE@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall clang::DeclarationName::getAsString(void)const " (?getAsString@DeclarationName@clang@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ) в функции "public: virtual bool __thiscall ExampleVisitor::VisitFunctionDecl(class clang::FunctionDecl *)" (?VisitFunctionDecl@ExampleVisitor@@UAE_NPAVFunctionDecl@clang@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::ASTContext & __thiscall clang::Decl::getASTContext(void)const " (?getASTContext@Decl@clang@@QBEAAVASTContext@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseObjCPropertyRefExpr(class clang::ObjCPropertyRefExpr *,class llvm::SmallVectorImpl<class llvm::PointerIntPair<class clang::Stmt *,1,bool,struct llvm::PointerLikeTypeTraits<class clang::Stmt *>,struct llvm::PointerIntPairInfo<class clang::Stmt *,1,struct llvm::PointerLikeTypeTraits<class clang::Stmt *> > > > *)" (?TraverseObjCPropertyRefExpr@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVObjCPropertyRefExpr@2@PAV?$SmallVectorImpl@V?$PointerIntPair@PAVStmt@clang@@$00_NU?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@U?$PointerIntPairInfo@PAVStmt@clang@@$00U?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@@4@@llvm@@@llvm@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class llvm::SmallVector<class clang::Attr *,4> const & __thiscall clang::Decl::getAttrs(void)const " (?getAttrs@Decl@clang@@QBEABV?$SmallVector@PAVAttr@clang@@$03@llvm@@XZ) в функции "public: class clang::Attr * const * __thiscall clang::Decl::attr_begin(void)const " (?attr_begin@Decl@clang@@QBEPBQAVAttr@2@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: bool __thiscall clang::Decl::hasDefiningAttr(void)const " (?hasDefiningAttr@Decl@clang@@QBE_NXZ) в функции "public: bool __thiscall clang::FunctionDecl::isThisDeclarationADefinition(void)const " (?isThisDeclarationADefinition@FunctionDecl@clang@@QBE_NXZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: static class clang::DeclContext * __cdecl clang::Decl::castToDeclContext(class clang::Decl const *)" (?castToDeclContext@Decl@clang@@SAPAVDeclContext@2@PBV12@@Z) в функции "public: static class clang::DeclContext * __cdecl llvm::cast_convert_val<class clang::DeclContext,class clang::AccessSpecDecl *,class clang::AccessSpecDecl *>::doit(class clang::AccessSpecDecl const *)" (?doit@?$cast_convert_val@VDeclContext@clang@@PAVAccessSpecDecl@2@PAV32@@llvm@@SAPAVDeclContext@clang@@PBVAccessSpecDecl@4@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: static class clang::Decl * __cdecl clang::Decl::castFromDeclContext(class clang::DeclContext const *)" (?castFromDeclContext@Decl@clang@@SAPAV12@PBVDeclContext@2@@Z) в функции "public: static class clang::Decl * __cdecl clang::cast_convert_decl_context<class clang::Decl,0>::doit(class clang::DeclContext *)" (?doit@?$cast_convert_decl_context@VDecl@clang@@$0A@@clang@@SAPAVDecl@2@PAVDeclContext@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::DeclContext::decl_iterator __thiscall clang::DeclContext::decls_begin(void)const " (?decls_begin@DeclContext@clang@@QBE?AVdecl_iterator@12@XZ) в функции "public: class llvm::iterator_range<class clang::DeclContext::decl_iterator> __thiscall clang::DeclContext::decls(void)const " (?decls@DeclContext@clang@@QBE?AV?$iterator_range@Vdecl_iterator@DeclContext@clang@@@llvm@@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: static bool __cdecl clang::DeclContext::classof(class clang::Decl const *)" (?classof@DeclContext@clang@@SA_NPBVDecl@2@@Z) в функции "public: static bool __cdecl llvm::isa_impl<class clang::DeclContext,class clang::AccessSpecDecl,void>::doit(class clang::AccessSpecDecl const &)" (?doit@?$isa_impl@VDeclContext@clang@@VAccessSpecDecl@2@X@llvm@@SA_NABVAccessSpecDecl@clang@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::Expr * __thiscall clang::VarDecl::getInit(void)" (?getInit@VarDecl@clang@@QAEPAVExpr@2@XZ) в функции "private: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseVarHelper(class clang::VarDecl *)" (?TraverseVarHelper@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@AAE_NPAVVarDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: enum clang::TemplateSpecializationKind __thiscall clang::VarDecl::getTemplateSpecializationKind(void)const " (?getTemplateSpecializationKind@VarDecl@clang@@QBE?AW4TemplateSpecializationKind@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseVarTemplateSpecializationDecl(class clang::VarTemplateSpecializationDecl *)" (?TraverseVarTemplateSpecializationDecl@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVVarTemplateSpecializationDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::Expr * __thiscall clang::ParmVarDecl::getDefaultArg(void)" (?getDefaultArg@ParmVarDecl@clang@@QAEPAVExpr@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseParmVarDecl(class clang::ParmVarDecl *)" (?TraverseParmVarDecl@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVParmVarDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::Expr * __thiscall clang::ParmVarDecl::getUninstantiatedDefaultArg(void)" (?getUninstantiatedDefaultArg@ParmVarDecl@clang@@QAEPAVExpr@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseParmVarDecl(class clang::ParmVarDecl *)" (?TraverseParmVarDecl@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVParmVarDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: bool __thiscall clang::ParmVarDecl::hasDefaultArg(void)const " (?hasDefaultArg@ParmVarDecl@clang@@QBE_NXZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseParmVarDecl(class clang::ParmVarDecl *)" (?TraverseParmVarDecl@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVParmVarDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: unsigned int __thiscall clang::FunctionDecl::getNumParams(void)const " (?getNumParams@FunctionDecl@clang@@QBEIXZ) в функции "public: class llvm::MutableArrayRef<class clang::ParmVarDecl *> __thiscall clang::FunctionDecl::parameters(void)" (?parameters@FunctionDecl@clang@@QAE?AV?$MutableArrayRef@PAVParmVarDecl@clang@@@llvm@@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::FunctionTemplateSpecializationInfo * __thiscall clang::FunctionDecl::getTemplateSpecializationInfo(void)const " (?getTemplateSpecializationInfo@FunctionDecl@clang@@QBEPAVFunctionTemplateSpecializationInfo@2@XZ) в функции "private: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseFunctionHelper(class clang::FunctionDecl *)" (?TraverseFunctionHelper@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@AAE_NPAVFunctionDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: enum clang::TemplateSpecializationKind __thiscall clang::FunctionDecl::getTemplateSpecializationKind(void)const " (?getTemplateSpecializationKind@FunctionDecl@clang@@QBE?AW4TemplateSpecializationKind@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseTemplateInstantiations(class clang::FunctionTemplateDecl *)" (?TraverseTemplateInstantiations@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVFunctionTemplateDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: bool __thiscall clang::RecordDecl::isInjectedClassName(void)const " (?isInjectedClassName@RecordDecl@clang@@QBE_NXZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseTemplateInstantiations(class clang::ClassTemplateDecl *)" (?TraverseTemplateInstantiations@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVClassTemplateDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual class clang::Stmt * __thiscall clang::CapturedDecl::getBody(void)const " (?getBody@CapturedDecl@clang@@UBEPAVStmt@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseCapturedDecl(class clang::CapturedDecl *)" (?TraverseCapturedDecl@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVCapturedDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::QualType __thiscall clang::ASTContext::getObjCInterfaceType(class clang::ObjCInterfaceDecl const *,class clang::ObjCInterfaceDecl *)const " (?getObjCInterfaceType@ASTContext@clang@@QBE?AVQualType@2@PBVObjCInterfaceDecl@2@PAV42@@Z) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseObjCPropertyRefExpr(class clang::ObjCPropertyRefExpr *,class llvm::SmallVectorImpl<class llvm::PointerIntPair<class clang::Stmt *,1,bool,struct llvm::PointerLikeTypeTraits<class clang::Stmt *>,struct llvm::PointerIntPairInfo<class clang::Stmt *,1,struct llvm::PointerLikeTypeTraits<class clang::Stmt *> > > > *)" (?TraverseObjCPropertyRefExpr@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVObjCPropertyRefExpr@2@PAV?$SmallVectorImpl@V?$PointerIntPair@PAVStmt@clang@@$00_NU?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@U?$PointerIntPairInfo@PAVStmt@clang@@$00U?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@@4@@llvm@@@llvm@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "protected: void __thiscall clang::StmtIteratorBase::NextDecl(bool)" (?NextDecl@StmtIteratorBase@clang@@IAEX_N@Z) в функции "public: struct clang::StmtIterator & __thiscall clang::StmtIteratorImpl<struct clang::StmtIterator,class clang::Stmt * &>::operator++(void)" (??E?$StmtIteratorImpl@UStmtIterator@clang@@AAPAVStmt@2@@clang@@QAEAAUStmtIterator@1@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "protected: void __thiscall clang::StmtIteratorBase::NextVA(void)" (?NextVA@StmtIteratorBase@clang@@IAEXXZ) в функции "public: struct clang::StmtIterator & __thiscall clang::StmtIteratorImpl<struct clang::StmtIterator,class clang::Stmt * &>::operator++(void)" (??E?$StmtIteratorImpl@UStmtIterator@clang@@AAPAVStmt@2@@clang@@QAEAAUStmtIterator@1@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "protected: class clang::Stmt * & __thiscall clang::StmtIteratorBase::GetDeclExpr(void)const " (?GetDeclExpr@StmtIteratorBase@clang@@IBEAAPAVStmt@2@XZ) в функции "public: class clang::Stmt * & __thiscall clang::StmtIteratorImpl<struct clang::StmtIterator,class clang::Stmt * &>::operator*(void)const " (??D?$StmtIteratorImpl@UStmtIterator@clang@@AAPAVStmt@2@@clang@@QBEAAPAVStmt@1@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class llvm::iterator_range<struct clang::StmtIterator> __thiscall clang::Stmt::children(void)" (?children@Stmt@clang@@QAE?AV?$iterator_range@UStmtIterator@clang@@@llvm@@XZ) в функции "public: class llvm::iterator_range<struct clang::StmtIterator> __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::getStmtChildren(class clang::Stmt *)" (?getStmtChildren@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE?AV?$iterator_range@UStmtIterator@clang@@@llvm@@PAVStmt@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::CapturedDecl * __thiscall clang::CapturedStmt::getCapturedDecl(void)" (?getCapturedDecl@CapturedStmt@clang@@QAEPAVCapturedDecl@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseCapturedStmt(class clang::CapturedStmt *,class llvm::SmallVectorImpl<class llvm::PointerIntPair<class clang::Stmt *,1,bool,struct llvm::PointerLikeTypeTraits<class clang::Stmt *>,struct llvm::PointerIntPairInfo<class clang::Stmt *,1,struct llvm::PointerLikeTypeTraits<class clang::Stmt *> > > > *)" (?TraverseCapturedStmt@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVCapturedStmt@2@PAV?$SmallVectorImpl@V?$PointerIntPair@PAVStmt@clang@@$00_NU?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@U?$PointerIntPairInfo@PAVStmt@clang@@$00U?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@@4@@llvm@@@llvm@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::SourceLocation __thiscall clang::Expr::getExprLoc(void)const " (?getExprLoc@Expr@clang@@QBE?AVSourceLocation@2@XZ) в функции "public: virtual bool __thiscall ExampleVisitor::VisitStmt(class clang::Stmt *)" (?VisitStmt@ExampleVisitor@@UAE_NPAVStmt@clang@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: static unsigned int __cdecl clang::TypeLoc::getLocalAlignmentForType(class clang::QualType)" (?getLocalAlignmentForType@TypeLoc@clang@@SAIVQualType@2@@Z) в функции "private: unsigned int __thiscall clang::ConcreteTypeLoc<class clang::UnqualTypeLoc,class clang::AdjustedTypeLoc,class clang::AdjustedType,struct clang::AdjustedLocInfo>::getNextTypeAlign(class clang::QualType)const " (?getNextTypeAlign@?$ConcreteTypeLoc@VUnqualTypeLoc@clang@@VAdjustedTypeLoc@2@VAdjustedType@2@UAdjustedLocInfo@2@@clang@@ABEIVQualType@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: struct clang::DeclarationNameInfo __thiscall clang::AutoTypeLoc::getConceptNameInfo(void)const " (?getConceptNameInfo@AutoTypeLoc@clang@@QBE?AUDeclarationNameInfo@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseAutoTypeLoc(class clang::AutoTypeLoc)" (?TraverseAutoTypeLoc@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NVAutoTypeLoc@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "private: class clang::CXXBaseSpecifier * __thiscall clang::CXXRecordDecl::DefinitionData::getBasesSlowCase(void)const " (?getBasesSlowCase@DefinitionData@CXXRecordDecl@clang@@ABEPAVCXXBaseSpecifier@3@XZ) в функции "public: class clang::CXXBaseSpecifier * __thiscall clang::CXXRecordDecl::DefinitionData::getBases(void)const " (?getBases@DefinitionData@CXXRecordDecl@clang@@QBEPAVCXXBaseSpecifier@3@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::CXXMethodDecl * __thiscall clang::CXXRecordDecl::getLambdaCallOperator(void)const " (?getLambdaCallOperator@CXXRecordDecl@clang@@QBEPAVCXXMethodDecl@2@XZ) в функции "private: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseFunctionHelper(class clang::FunctionDecl *)" (?TraverseFunctionHelper@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@AAE_NPAVFunctionDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: enum clang::TemplateSpecializationKind __thiscall clang::CXXRecordDecl::getTemplateSpecializationKind(void)const " (?getTemplateSpecializationKind@CXXRecordDecl@clang@@QBE?AW4TemplateSpecializationKind@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseClassTemplateSpecializationDecl(class clang::ClassTemplateSpecializationDecl *)" (?TraverseClassTemplateSpecializationDecl@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVClassTemplateSpecializationDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::CXXCtorInitializer * const * __thiscall clang::CXXConstructorDecl::init_begin(void)const " (?init_begin@CXXConstructorDecl@clang@@QBEPBQAVCXXCtorInitializer@2@XZ) в функции "public: class clang::CXXCtorInitializer * * __thiscall clang::CXXConstructorDecl::init_begin(void)" (?init_begin@CXXConstructorDecl@clang@@QAEPAPAVCXXCtorInitializer@2@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "private: void __thiscall clang::ObjCInterfaceDecl::LoadExternalDefinition(void)const " (?LoadExternalDefinition@ObjCInterfaceDecl@clang@@ABEXXZ) в функции "public: class clang::TypeSourceInfo * __thiscall clang::ObjCInterfaceDecl::getSuperClassTInfo(void)const " (?getSuperClassTInfo@ObjCInterfaceDecl@clang@@QBEPAVTypeSourceInfo@2@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "protected: class llvm::FoldingSetVector<class clang::FunctionTemplateSpecializationInfo,class llvm::SmallVector<class clang::FunctionTemplateSpecializationInfo *,8> > & __thiscall clang::FunctionTemplateDecl::getSpecializations(void)const " (?getSpecializations@FunctionTemplateDecl@clang@@IBEAAV?$FoldingSetVector@VFunctionTemplateSpecializationInfo@clang@@V?$SmallVector@PAVFunctionTemplateSpecializationInfo@clang@@$07@llvm@@@llvm@@XZ) в функции "public: struct clang::RedeclarableTemplateDecl::SpecIterator<class clang::FunctionTemplateSpecializationInfo,struct clang::RedeclarableTemplateDecl::SpecEntryTraits<class clang::FunctionTemplateSpecializationInfo>,class clang::FunctionDecl> __thiscall clang::FunctionTemplateDecl::spec_begin(void)const " (?spec_begin@FunctionTemplateDecl@clang@@QBE?AU?$SpecIterator@VFunctionTemplateSpecializationInfo@clang@@U?$SpecEntryTraits@VFunctionTemplateSpecializationInfo@clang@@@RedeclarableTemplateDecl@2@VFunctionDecl@2@@RedeclarableTemplateDecl@2@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "protected: class llvm::FoldingSetVector<class clang::ClassTemplateSpecializationDecl,class llvm::SmallVector<class clang::ClassTemplateSpecializationDecl *,8> > & __thiscall clang::ClassTemplateDecl::getSpecializations(void)const " (?getSpecializations@ClassTemplateDecl@clang@@IBEAAV?$FoldingSetVector@VClassTemplateSpecializationDecl@clang@@V?$SmallVector@PAVClassTemplateSpecializationDecl@clang@@$07@llvm@@@llvm@@XZ) в функции "public: struct clang::RedeclarableTemplateDecl::SpecIterator<class clang::ClassTemplateSpecializationDecl,struct clang::RedeclarableTemplateDecl::SpecEntryTraits<class clang::ClassTemplateSpecializationDecl>,class clang::ClassTemplateSpecializationDecl> __thiscall clang::ClassTemplateDecl::spec_begin(void)const " (?spec_begin@ClassTemplateDecl@clang@@QBE?AU?$SpecIterator@VClassTemplateSpecializationDecl@clang@@U?$SpecEntryTraits@VClassTemplateSpecializationDecl@clang@@@RedeclarableTemplateDecl@2@V12@@RedeclarableTemplateDecl@2@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "protected: class llvm::FoldingSetVector<class clang::VarTemplateSpecializationDecl,class llvm::SmallVector<class clang::VarTemplateSpecializationDecl *,8> > & __thiscall clang::VarTemplateDecl::getSpecializations(void)const " (?getSpecializations@VarTemplateDecl@clang@@IBEAAV?$FoldingSetVector@VVarTemplateSpecializationDecl@clang@@V?$SmallVector@PAVVarTemplateSpecializationDecl@clang@@$07@llvm@@@llvm@@XZ) в функции "public: struct clang::RedeclarableTemplateDecl::SpecIterator<class clang::VarTemplateSpecializationDecl,struct clang::RedeclarableTemplateDecl::SpecEntryTraits<class clang::VarTemplateSpecializationDecl>,class clang::VarTemplateSpecializationDecl> __thiscall clang::VarTemplateDecl::spec_begin(void)const " (?spec_begin@VarTemplateDecl@clang@@QBE?AU?$SpecIterator@VVarTemplateSpecializationDecl@clang@@U?$SpecEntryTraits@VVarTemplateSpecializationDecl@clang@@@RedeclarableTemplateDecl@2@V12@@RedeclarableTemplateDecl@2@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::Expr * __thiscall clang::CXXForRangeStmt::getRangeInit(void)" (?getRangeInit@CXXForRangeStmt@clang@@QAEPAVExpr@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseCXXForRangeStmt(class clang::CXXForRangeStmt *,class llvm::SmallVectorImpl<class llvm::PointerIntPair<class clang::Stmt *,1,bool,struct llvm::PointerLikeTypeTraits<class clang::Stmt *>,struct llvm::PointerIntPairInfo<class clang::Stmt *,1,struct llvm::PointerLikeTypeTraits<class clang::Stmt *> > > > *)" (?TraverseCXXForRangeStmt@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVCXXForRangeStmt@2@PAV?$SmallVectorImpl@V?$PointerIntPair@PAVStmt@clang@@$00_NU?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@U?$PointerIntPairInfo@PAVStmt@clang@@$00U?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@@4@@llvm@@@llvm@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: struct clang::CXXRewrittenBinaryOperator::DecomposedForm __thiscall clang::CXXRewrittenBinaryOperator::getDecomposedForm(void)const " (?getDecomposedForm@CXXRewrittenBinaryOperator@clang@@QBE?AUDecomposedForm@12@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseCXXRewrittenBinaryOperator(class clang::CXXRewrittenBinaryOperator *,class llvm::SmallVectorImpl<class llvm::PointerIntPair<class clang::Stmt *,1,bool,struct llvm::PointerLikeTypeTraits<class clang::Stmt *>,struct llvm::PointerIntPairInfo<class clang::Stmt *,1,struct llvm::PointerLikeTypeTraits<class clang::Stmt *> > > > *)" (?TraverseCXXRewrittenBinaryOperator@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVCXXRewrittenBinaryOperator@2@PAV?$SmallVectorImpl@V?$PointerIntPair@PAVStmt@clang@@$00_NU?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@U?$PointerIntPairInfo@PAVStmt@clang@@$00U?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@@4@@llvm@@@llvm@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: bool __thiscall clang::LambdaExpr::isInitCapture(class clang::LambdaCapture const *)const " (?isInitCapture@LambdaExpr@clang@@QBE_NPBVLambdaCapture@2@@Z) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseLambdaCapture(class clang::LambdaExpr *,class clang::LambdaCapture const *,class clang::Expr *)" (?TraverseLambdaCapture@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVLambdaExpr@2@PBVLambdaCapture@2@PAVExpr@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::LambdaCapture const * __thiscall clang::LambdaExpr::capture_begin(void)const " (?capture_begin@LambdaExpr@clang@@QBEPBVLambdaCapture@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseLambdaExpr(class clang::LambdaExpr *,class llvm::SmallVectorImpl<class llvm::PointerIntPair<class clang::Stmt *,1,bool,struct llvm::PointerLikeTypeTraits<class clang::Stmt *>,struct llvm::PointerIntPairInfo<class clang::Stmt *,1,struct llvm::PointerLikeTypeTraits<class clang::Stmt *> > > > *)" (?TraverseLambdaExpr@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVLambdaExpr@2@PAV?$SmallVectorImpl@V?$PointerIntPair@PAVStmt@clang@@$00_NU?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@U?$PointerIntPairInfo@PAVStmt@clang@@$00U?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@@4@@llvm@@@llvm@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::CXXRecordDecl * __thiscall clang::LambdaExpr::getLambdaClass(void)const " (?getLambdaClass@LambdaExpr@clang@@QBEPAVCXXRecordDecl@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseLambdaExpr(class clang::LambdaExpr *,class llvm::SmallVectorImpl<class llvm::PointerIntPair<class clang::Stmt *,1,bool,struct llvm::PointerLikeTypeTraits<class clang::Stmt *>,struct llvm::PointerIntPairInfo<class clang::Stmt *,1,struct llvm::PointerLikeTypeTraits<class clang::Stmt *> > > > *)" (?TraverseLambdaExpr@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVLambdaExpr@2@PAV?$SmallVectorImpl@V?$PointerIntPair@PAVStmt@clang@@$00_NU?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@U?$PointerIntPairInfo@PAVStmt@clang@@$00U?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@@4@@llvm@@@llvm@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::CXXMethodDecl * __thiscall clang::LambdaExpr::getCallOperator(void)const " (?getCallOperator@LambdaExpr@clang@@QBEPAVCXXMethodDecl@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseLambdaExpr(class clang::LambdaExpr *,class llvm::SmallVectorImpl<class llvm::PointerIntPair<class clang::Stmt *,1,bool,struct llvm::PointerLikeTypeTraits<class clang::Stmt *>,struct llvm::PointerIntPairInfo<class clang::Stmt *,1,struct llvm::PointerLikeTypeTraits<class clang::Stmt *> > > > *)" (?TraverseLambdaExpr@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVLambdaExpr@2@PAV?$SmallVectorImpl@V?$PointerIntPair@PAVStmt@clang@@$00_NU?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@U?$PointerIntPairInfo@PAVStmt@clang@@$00U?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@@4@@llvm@@@llvm@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::TemplateParameterList * __thiscall clang::LambdaExpr::getTemplateParameterList(void)const " (?getTemplateParameterList@LambdaExpr@clang@@QBEPAVTemplateParameterList@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseLambdaExpr(class clang::LambdaExpr *,class llvm::SmallVectorImpl<class llvm::PointerIntPair<class clang::Stmt *,1,bool,struct llvm::PointerLikeTypeTraits<class clang::Stmt *>,struct llvm::PointerIntPairInfo<class clang::Stmt *,1,struct llvm::PointerLikeTypeTraits<class clang::Stmt *> > > > *)" (?TraverseLambdaExpr@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVLambdaExpr@2@PAV?$SmallVectorImpl@V?$PointerIntPair@PAVStmt@clang@@$00_NU?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@U?$PointerIntPairInfo@PAVStmt@clang@@$00U?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@@4@@llvm@@@llvm@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::Expr * __thiscall clang::LambdaExpr::getTrailingRequiresClause(void)const " (?getTrailingRequiresClause@LambdaExpr@clang@@QBEPAVExpr@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseLambdaExpr(class clang::LambdaExpr *,class llvm::SmallVectorImpl<class llvm::PointerIntPair<class clang::Stmt *,1,bool,struct llvm::PointerLikeTypeTraits<class clang::Stmt *>,struct llvm::PointerIntPairInfo<class clang::Stmt *,1,struct llvm::PointerLikeTypeTraits<class clang::Stmt *> > > > *)" (?TraverseLambdaExpr@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVLambdaExpr@2@PAV?$SmallVectorImpl@V?$PointerIntPair@PAVStmt@clang@@$00_NU?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@U?$PointerIntPairInfo@PAVStmt@clang@@$00U?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@@4@@llvm@@@llvm@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::Stmt * __thiscall clang::LambdaExpr::getBody(void)const " (?getBody@LambdaExpr@clang@@QBEPAVStmt@2@XZ) в функции "public: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::TraverseLambdaExpr(class clang::LambdaExpr *,class llvm::SmallVectorImpl<class llvm::PointerIntPair<class clang::Stmt *,1,bool,struct llvm::PointerLikeTypeTraits<class clang::Stmt *>,struct llvm::PointerIntPairInfo<class clang::Stmt *,1,struct llvm::PointerLikeTypeTraits<class clang::Stmt *> > > > *)" (?TraverseLambdaExpr@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@QAE_NPAVLambdaExpr@2@PAV?$SmallVectorImpl@V?$PointerIntPair@PAVStmt@clang@@$00_NU?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@U?$PointerIntPairInfo@PAVStmt@clang@@$00U?$PointerLikeTypeTraits@PAVStmt@clang@@@llvm@@@4@@llvm@@@llvm@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: struct clang::OMPUsesAllocatorsClause::Data __thiscall clang::OMPUsesAllocatorsClause::getAllocatorData(unsigned int)const " (?getAllocatorData@OMPUsesAllocatorsClause@clang@@QBE?AUData@12@I@Z) в функции "private: bool __thiscall clang::RecursiveASTVisitor<class ExampleVisitor>::VisitOMPUsesAllocatorsClause(class clang::OMPUsesAllocatorsClause *)" (?VisitOMPUsesAllocatorsClause@?$RecursiveASTVisitor@VExampleVisitor@@@clang@@AAE_NPAVOMPUsesAllocatorsClause@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class llvm::MutableArrayRef<class clang::Stmt *> __thiscall clang::OMPChildren::getChildren(void)" (?getChildren@OMPChildren@clang@@QAE?AV?$MutableArrayRef@PAVStmt@clang@@@llvm@@XZ) в функции "private: class llvm::MutableArrayRef<class clang::Expr *> __thiscall clang::OMPAllocateDecl::getVars(void)" (?getVars@OMPAllocateDecl@clang@@AAE?AV?$MutableArrayRef@PAVExpr@clang@@@llvm@@XZ).
main.obj : error LNK2001: неразрешенный внешний символ "public: virtual bool __thiscall clang::ASTConsumer::HandleTopLevelDecl(class clang::DeclGroupRef)" (?HandleTopLevelDecl@ASTConsumer@clang@@UAE_NVDeclGroupRef@2@@Z).
main.obj : error LNK2001: неразрешенный внешний символ "public: virtual void __thiscall clang::ASTConsumer::HandleInterestingDecl(class clang::DeclGroupRef)" (?HandleInterestingDecl@ASTConsumer@clang@@UAEXVDeclGroupRef@2@@Z).
main.obj : error LNK2001: неразрешенный внешний символ "public: virtual void __thiscall clang::ASTConsumer::HandleTopLevelDeclInObjCContainer(class clang::DeclGroupRef)" (?HandleTopLevelDeclInObjCContainer@ASTConsumer@clang@@UAEXVDeclGroupRef@2@@Z).
main.obj : error LNK2001: неразрешенный внешний символ "public: virtual void __thiscall clang::ASTConsumer::HandleImplicitImportDecl(class clang::ImportDecl *)" (?HandleImplicitImportDecl@ASTConsumer@clang@@UAEXPAVImportDecl@2@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "class llvm::IntrusiveRefCntPtr<class llvm::vfs::FileSystem> __cdecl llvm::vfs::getRealFileSystem(void)" (?getRealFileSystem@vfs@llvm@@YA?AV?$IntrusiveRefCntPtr@VFileSystem@vfs@llvm@@@2@XZ) в функции _main.
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: __thiscall clang::FileManager::~FileManager(void)" (??1FileManager@clang@@QAE@XZ) в функции "public: void * __thiscall clang::FileManager::`scalar deleting destructor'(unsigned int)" (??_GFileManager@clang@@QAEPAXI@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "private: void __thiscall llvm::cl::OptionCategory::registerCategory(void)" (?registerCategory@OptionCategory@cl@llvm@@AAEXXZ) в функции "public: __thiscall llvm::cl::OptionCategory::OptionCategory(class llvm::StringRef,class llvm::StringRef)" (??0OptionCategory@cl@llvm@@QAE@VStringRef@2@0@Z).
main.obj : error LNK2001: неразрешенный внешний символ "protected: virtual bool __thiscall clang::FrontendAction::shouldEraseOutputFiles(void)" (?shouldEraseOutputFiles@FrontendAction@clang@@MAE_NXZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: __thiscall clang::FrontendAction::FrontendAction(void)" (??0FrontendAction@clang@@QAE@XZ) в функции "public: __thiscall clang::ASTFrontendAction::ASTFrontendAction(void)" (??0ASTFrontendAction@clang@@QAE@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual __thiscall clang::FrontendAction::~FrontendAction(void)" (??1FrontendAction@clang@@UAE@XZ) в функции "public: virtual __thiscall clang::ASTFrontendAction::~ASTFrontendAction(void)" (??1ASTFrontendAction@clang@@UAE@XZ).
main.obj : error LNK2001: неразрешенный внешний символ "public: virtual void __thiscall clang::FrontendAction::EndSourceFile(void)" (?EndSourceFile@FrontendAction@clang@@UAEXXZ).
main.obj : error LNK2001: неразрешенный внешний символ "protected: virtual void __thiscall clang::ASTFrontendAction::ExecuteAction(void)" (?ExecuteAction@ASTFrontendAction@clang@@MAEXXZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: __thiscall clang::PCHContainerOperations::PCHContainerOperations(void)" (??0PCHContainerOperations@clang@@QAE@XZ) в функции "void __cdecl std::_Construct_in_place<class clang::PCHContainerOperations>(class clang::PCHContainerOperations &)" (??$_Construct_in_place@VPCHContainerOperations@clang@@$$V@std@@YAXAAVPCHContainerOperations@clang@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: static class llvm::Expected<class clang::tooling::CommonOptionsParser> __cdecl clang::tooling::CommonOptionsParser::create(int &,char const * *,class llvm::cl::OptionCategory &,enum llvm::cl::NumOccurrencesFlag,char const *)" (?create@CommonOptionsParser@tooling@clang@@SA?AV?$Expected@VCommonOptionsParser@tooling@clang@@@llvm@@AAHPAPBDAAVOptionCategory@cl@5@W4NumOccurrencesFlag@75@PBD@Z) в функции _main.
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual __thiscall clang::tooling::ToolAction::~ToolAction(void)" (??1ToolAction@tooling@clang@@UAE@XZ) в функции "public: virtual void * __thiscall clang::tooling::ToolAction::`scalar deleting destructor'(unsigned int)" (??_GToolAction@tooling@clang@@UAEPAXI@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: virtual __thiscall clang::tooling::FrontendActionFactory::~FrontendActionFactory(void)" (??1FrontendActionFactory@tooling@clang@@UAE@XZ) в функции "public: virtual __thiscall `class std::unique_ptr<class clang::tooling::FrontendActionFactory,struct std::default_delete<class clang::tooling::FrontendActionFactory> > __cdecl clang::tooling::newFrontendActionFactory<class ExampleFrontendAction>(void)'::`2'::SimpleFrontendActionFactory::~SimpleFrontendActionFactory(void)" (??1SimpleFrontendActionFactory@?1???$newFrontendActionFactory@VExampleFrontendAction@@@tooling@clang@@YA?AV?$unique_ptr@VFrontendActionFactory@tooling@clang@@U?$default_delete@VFrontendActionFactory@tooling@clang@@@std@@@std@@XZ@UAE@XZ).
main.obj : error LNK2001: неразрешенный внешний символ "public: virtual bool __thiscall clang::tooling::FrontendActionFactory::runInvocation(class std::shared_ptr<class clang::CompilerInvocation>,class clang::FileManager *,class std::shared_ptr<class clang::PCHContainerOperations>,class clang::DiagnosticConsumer *)" (?runInvocation@FrontendActionFactory@tooling@clang@@UAE_NV?$shared_ptr@VCompilerInvocation@clang@@@std@@PAVFileManager@3@V?$shared_ptr@VPCHContainerOperations@clang@@@5@PAVDiagnosticConsumer@3@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: __thiscall clang::tooling::ClangTool::ClangTool(class clang::tooling::CompilationDatabase const &,class llvm::ArrayRef<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,class std::shared_ptr<class clang::PCHContainerOperations>,class llvm::IntrusiveRefCntPtr<class llvm::vfs::FileSystem>,class llvm::IntrusiveRefCntPtr<class clang::FileManager>)" (??0ClangTool@tooling@clang@@QAE@ABVCompilationDatabase@12@V?$ArrayRef@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@llvm@@V?$shared_ptr@VPCHContainerOperations@clang@@@std@@V?$IntrusiveRefCntPtr@VFileSystem@vfs@llvm@@@5@V?$IntrusiveRefCntPtr@VFileManager@clang@@@5@@Z) в функции _main.
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: __thiscall clang::tooling::ClangTool::~ClangTool(void)" (??1ClangTool@tooling@clang@@QAE@XZ) в функции _main.
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: int __thiscall clang::tooling::ClangTool::run(class clang::tooling::ToolAction *)" (?run@ClangTool@tooling@clang@@QAEHPAVToolAction@23@@Z) в функции _main.
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: __thiscall clang::DeltaTree::~DeltaTree(void)" (??1DeltaTree@clang@@QAE@XZ) в функции "public: __thiscall clang::RewriteBuffer::~RewriteBuffer(void)" (??1RewriteBuffer@clang@@QAE@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: __thiscall clang::RopePieceBTree::~RopePieceBTree(void)" (??1RopePieceBTree@clang@@QAE@XZ) в функции "public: __thiscall clang::RewriteRope::~RewriteRope(void)" (??1RewriteRope@clang@@QAE@XZ).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class llvm::raw_ostream & __thiscall clang::RewriteBuffer::write(class llvm::raw_ostream &)const " (?write@RewriteBuffer@clang@@QBEAAVraw_ostream@llvm@@AAV34@@Z) в функции _main.
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: bool __thiscall clang::Rewriter::ReplaceText(class clang::SourceLocation,unsigned int,class llvm::StringRef)" (?ReplaceText@Rewriter@clang@@QAE_NVSourceLocation@2@IVStringRef@llvm@@@Z) в функции "public: virtual bool __thiscall ExampleVisitor::VisitFunctionDecl(class clang::FunctionDecl *)" (?VisitFunctionDecl@ExampleVisitor@@UAE_NPAVFunctionDecl@clang@@@Z).
main.obj : error LNK2019: ссылка на неразрешенный внешний символ "public: class clang::RewriteBuffer & __thiscall clang::Rewriter::getEditBuffer(class clang::FileID)" (?getEditBuffer@Rewriter@clang@@QAEAAVRewriteBuffer@2@VFileID@2@@Z) в функции _main.
D:\clang\llvm-project\build\Debug\lib\clangFrontend.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangSerialization.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangDriver.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangTooling.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangParse.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangSema.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangAnalysis.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangRewriteFrontend.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangRewrite.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangEdit.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangAST.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangLex.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\llvm-project\build\Debug\lib\clangBasic.lib : warning LNK4272: тип компьютера библиотеки "x64" конфликтует с типом целевого компьютера "x86"
D:\clang\project\StaticAnalyzer\Debug\StaticAnalyzer.exe : fatal error LNK1120: неразрешенных внешних элементов: 88
